import{_ as s,c as n,o as t,V as a}from"./chunks/framework.9d7713fb.js";const e="/assets/scriptsSection.279457ff.png",o="/assets/scriptStructure.44dc2a0e.png",l="/assets/customInitScript.ddb830c1.png",A=JSON.parse('{"title":"Scripts","description":"","frontmatter":{},"headers":[],"relativePath":"jsngin/scripts.md","filePath":"jsngin/scripts.md"}'),p={name:"jsngin/scripts.md"},c=a('<h1 id="scripts" tabindex="-1">Scripts <a class="header-anchor" href="#scripts" aria-label="Permalink to &quot;Scripts&quot;">​</a></h1><p>Components have scripts attached to them that are responsible for prviding the logic for the behaviour. There are 2 types of scripts</p><ul><li><code>Game Scripts</code> responsible for game logic. Bundled with the game.</li><li><code>Editor Scripts</code> responsible for inEditor beahaviour. These are not bundled with the game.</li></ul><h4 id="this-section-will-cover-game-scripts" tabindex="-1">This section will cover Game Scripts. <a class="header-anchor" href="#this-section-will-cover-game-scripts" aria-label="Permalink to &quot;This section will cover Game Scripts.&quot;">​</a></h4><p>To update scripts ensure that the scripts section is visible. <img src="'+e+'" alt="enable scripts section"></p><p>Each script has an event associated with it. The script file must <code>export</code> a function with the same name as the event. This function is triggered on the event. <img src="'+o+`" alt="event name for script"></p><h2 id="example-script" tabindex="-1">Example script <a class="header-anchor" href="#example-script" aria-label="Permalink to &quot;Example script&quot;">​</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// initScript.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Callback</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">InitEvent</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@thejsngin/jsngin</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> init</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Callback</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">InitEvent</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">gameInstance</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">gameObjectInstance</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">componentHelpers</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">init triggered</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">init</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">};</span></span></code></pre></div><p>Add this script to any component with <code>init</code> as the event name. <img src="`+l+'" alt="custom init script"></p><p>On running the game with <code>npm run dev</code> you should see the <code>&quot;init triggered&quot;</code> appear in the console.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>All the default events can be found <a href="./eventSystem.html#lifecycle-events">here</a></p></div>',11),i=[c];function r(y,D,h,F,d,m){return t(),n("div",null,i)}const u=s(p,[["render",r]]);export{A as __pageData,u as default};
